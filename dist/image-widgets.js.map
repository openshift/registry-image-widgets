{"version":3,"sources":["webpack:///webpack/bootstrap 64c4f38ef5568fadae58","webpack:///./images.less?50d8","webpack:///./layers.less?d714","webpack:///./client.js","webpack:///./date.js","webpack:///./images.js","webpack:///./layers.js","webpack:///./views/annotations.html","webpack:///./views/image-body.html","webpack:///./views/image-config.html","webpack:///./views/image-layers.html","webpack:///./views/image-listing.html","webpack:///./views/image-meta.html","webpack:///./views/image-panel.html","webpack:///./views/image-pull.html","webpack:///./views/imagestream-body.html","webpack:///./views/imagestream-listing.html","webpack:///./views/imagestream-meta.html","webpack:///./views/imagestream-panel.html","webpack:///./views/imagestream-push.html"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA,yC;;;;;;ACAA,yC;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,gCAAgC;AAChC;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;ACrFD;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;AChFD;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,gCAAgC;AAChC;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,iCAAiC,QAAQ;AACzC;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,qEAAqE,EAAE;AACvE;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,0DAA0D;AAC1D;AACA,iBAAiB;AACjB;AACA,wDAAwD;AACxD;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,CAAC;;;;;;;ACpdD;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,gCAAgC;AAChC;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA,yEAAyE,EAAE,QAAQ,EAAE,gBAAgB,EAAE;AACvG,yBAAyB;AACzB,yEAAyE,EAAE,UAAU,EAAE,mBAAmB,EAAE;AAC5G;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;AClID;AACA,KAAK;AACL,SAAS;AACT,+GAA+G,MAAM,IAAI,OAAO;AAChI;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB;;;;;;ACRA;AACA,KAAK;AACL,SAAS;AACT,sHAAsH,eAAe,2FAA2F,kBAAkB,uGAAuG,sBAAsB,qJAAqJ,cAAc,sEAAsE,eAAe,0EAA0E,kCAAkC,0RAA0R,sBAAsB,KAAK,sCAAsC,0FAA0F,mCAAmC,KAAK,mDAAmD,gIAAgI,mCAAmC,KAAK,kDAAkD,kEAAkE,uBAAuB,kHAAkH,gBAAgB,qKAAqK,MAAM,aAAa;AACh1D;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB;;;;;;ACRA;AACA,KAAK;AACL,SAAS;AACT,8EAA8E,yBAAyB,4JAA4J,aAAa,mIAAmI,mBAAmB,4IAA4I,mBAAmB,4EAA4E,qBAAqB,4CAA4C,wCAAwC,0LAA0L,KAAK,6LAA6L,MAAM,+PAA+P,QAAQ;AACn4C;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB;;;;;;ACRA;AACA,KAAK;AACL,SAAS;AACT,+FAA+F,cAAc,qBAAqB,cAAc,KAAK,0BAA0B,cAAc,cAAc;AAC3M;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB;;;;;;ACRA;AACA,KAAK;AACL,SAAS;AACT,8XAA8X,qFAAqF,eAAe,wEAAwE,iSAAiS,qCAAqC,aAAa,WAAW,KAAK,YAAY,2LAA2L,oBAAoB,gCAAgC,oBAAoB,2FAA2F,gBAAgB,oGAAoG,YAAY,qDAAqD,uBAAuB,oBAAoB,qXAAqX,yDAAyD,0YAA0Y,KAAK,6CAA6C,2BAA2B,KAAK,2BAA2B,6IAA6I,wBAAwB,gDAAgD,KAAK,uCAAuC,wBAAwB,OAAO,8CAA8C,idAAid,SAAS;AACpqG;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB;;;;;;ACRA;AACA,KAAK;AACL,SAAS;AACT,oMAAoM,MAAM,GAAG,OAAO,0HAA0H,MAAM,+IAA+I,yCAAyC;AAC5gB;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB;;;;;;ACRA;AACA,KAAK;AACL,SAAS;AACT,8SAA8S,oBAAoB,qFAAqF,sBAAsB,2FAA2F,oBAAoB;AAC5hB;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB;;;;;;ACRA;AACA,KAAK;AACL,SAAS;AACT,kQAAkQ,UAAU,2EAA2E,wBAAwB,UAAU,UAAU;AACnY;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB;;;;;;ACRA;AACA,KAAK;AACL,SAAS;AACT,2SAA2S,qBAAqB,eAAe,gCAAgC,gBAAgB,wBAAwB,m6DAAm6D,wCAAwC,mDAAmD,0CAA0C,6HAA6H,gDAAgD,2FAA2F,gCAAgC;AACvuF;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB;;;;;;ACRA;AACA,KAAK;AACL,SAAS;AACT,iWAAiW,oEAAoE,gCAAgC,uCAAuC,yPAAyP,oEAAoE,mKAAmK,KAAK,+VAA+V,WAAW,KAAK,YAAY,qGAAqG,UAAU,gBAAgB,UAAU,yQAAyQ,oFAAoF,uZAAuZ,SAAS;AACltE;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB;;;;;;ACRA;AACA,KAAK;AACL,SAAS;AACT;AACA;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB;;;;;;ACRA;AACA,KAAK;AACL,SAAS;AACT,meAAme,oBAAoB,wFAAwF,oBAAoB,iIAAiI,oBAAoB;AACxvB;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB;;;;;;ACRA;AACA,KAAK;AACL,SAAS;AACT,oPAAoP,wBAAwB,UAAU,kCAAkC,GAAG,4BAA4B,0CAA0C,wBAAwB,UAAU,kCAAkC,GAAG,4BAA4B,kIAAkI,kCAAkC,GAAG,4BAA4B,gFAAgF,kCAAkC,GAAG,4BAA4B;AACxzB;AACA;AACA,QAAQ;AACR,KAAK,2CAA2C,cAAc;AAC9D,kB","file":"image-widgets.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 64c4f38ef5568fadae58","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./images.less\n// module id = 0\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./layers.less\n// module id = 1\n// module chunks = 0","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nangular.module('registryUI.client', [ ])\n\n.factory('WeakMap', function() {\n    if (typeof window.WeakMap === 'function')\n        return window.WeakMap;\n\n    /*\n     * A WeakMap implementation\n     *\n     * This works on ES5 browsers, with the caveat that the mapped\n     * items are discoverable with enough work.\n     *\n     * To be clear, the principal use of a WeakMap is to associate\n     * an value with an object, the object is the key. And then have\n     * that value go away when the object does. This is very, very\n     * similar to properties.\n     *\n     * The main difference is that any assigned values are not\n     * garbage collected if the *weakmap* itself is collected,\n     * and of course one can actually access the non-enumerable\n     * property that makes this work.\n     */\n\n    var weak_property, local_seed = 1;\n    function SimpleWeakMap() {\n        var local_property = \"weakmap\" + local_seed;\n        local_seed += 1;\n\n        if (!weak_property)\n            weak_property = Math.random().toString(36).slice(2);\n\n        var self = this;\n\n        self.delete = function delete_(obj) {\n            var x, map = obj[weak_property];\n            if (map)\n                delete map[local_property];\n        };\n\n        self.has = function has(obj) {\n            var map = obj[weak_property];\n            return (map && local_property in map);\n        };\n\n        self.get = function get(obj) {\n            var map = obj[weak_property];\n            if (!map)\n                return undefined;\n            return map[local_property];\n        };\n\n        self.set = function set(obj, value) {\n            var map = obj[weak_property];\n            if (!map) {\n                map = function WeakMapData() { };\n                Object.defineProperty(obj, weak_property, {\n                    enumerable: false, configurable: false,\n                    writable: false, value: map,\n                });\n            }\n\n            map[local_property] = value;\n        };\n    }\n\n    return SimpleWeakMap;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client.js\n// module id = 2\n// module chunks = 0","/* globals moment */\n\n(function() {\n\nangular.module('registryUI.date', [])\n\n.provider(\"MomentLib\", [\n    function() {\n        var self = this;\n\n        /* Until we come up with a good default implementation, must be provided */\n        self.MomentLibFactory = \"globalMoment\";\n\n        function load(injector, name) {\n            if (angular.isString(name))\n                return injector.get(name, \"MomentLib\");\n            else\n                return injector.invoke(name);\n        }\n\n        self.$get = [\n            \"$injector\",\n            function($injector) {\n                return load($injector, self.MomentLibFactory);\n            }\n        ];\n    }\n])\n\n.factory(\"globalMoment\", [\n    function() {\n        return moment;\n    }\n])\n\n.factory('dateRefreshMinute', [\n    \"$rootScope\",\n    function($rootScope) {\n        var interval = null;\n        return {\n            enable: function() {\n                if (interval === null) {\n                    interval = window.setInterval(function() {\n                        $rootScope.$applyAsync();\n                    }, 60000);\n                }\n            },\n            disable: function() {\n                if (interval !== null) {\n                    window.clearInterval(interval);\n                    interval = null;\n                }\n            },\n        };\n    }\n])\n\n.filter('dateRelative', [\n    \"MomentLib\",\n    \"dateRefreshMinute\",\n    function(momentLib) {\n        function dateRelative(timestamp) {\n            if (!timestamp)\n                return timestamp;\n            return momentLib(timestamp).fromNow();\n        }\n\n        /* When moment is not loaded fall back to simple behavior */\n        function dateAbsolute(timestamp) {\n            return timestamp;\n        }\n\n        dateRelative.$stateful = true;\n        if (typeof(momentLib) === 'function')\n            return dateRelative;\n        else\n            return dateAbsolute;\n    }\n]);\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./date.js\n// module id = 3\n// module chunks = 0","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n\"use strict\";\n\n/*\n * Executes callback for each stream.status.tag[x].item[y]\n * in a stream. Similar behavior to angular.forEach()\n */\nfunction imagestreamEachTagItem(imagestream, callback, context) {\n    var i, il, items;\n    var t, tl, tags = (imagestream.status || {}).tags || [];\n    for (t = 0, tl = tags.length; t < tl; t++) {\n        items = (tags[t].items) || [];\n        for (i = 0, il = items.length; i < il; i++)\n            callback.call(context || null, tags[t], items[i]);\n    }\n}\n\nangular.module('registryUI.images', [\n    'registryUI.client',\n    'registryUI.date',\n    'gettext',\n])\n\n.factory('imageDockerManifest', [\n    'WeakMap',\n    function(WeakMap) {\n        var weak = new WeakMap();\n\n        return function imageDockerManifest(image) {\n            if (!image)\n                return { };\n            var manifest = weak.get(image);\n            if (!manifest) {\n                manifest = JSON.parse(image.dockerImageManifest || \"{ }\");\n                angular.forEach(manifest.history || [], function(item) {\n                    if (typeof item.v1Compatibility == \"string\")\n                        item.v1Compatibility = JSON.parse(item.v1Compatibility);\n                });\n                weak.set(image, manifest);\n            }\n            return manifest;\n        };\n    }\n])\n\n.factory('imageDockerConfig', [\n    'WeakMap',\n    'imageLayers',\n    function(WeakMap, imageLayers) {\n        var weak = new WeakMap();\n        return function imageDockerConfig(image) {\n            if (!image)\n                return { };\n            var meta, layers, compat, config = weak.get(image);\n            if (!config) {\n                layers = imageLayers(image);\n                if (layers.length)\n                    compat = layers[0].v1Compatibility;\n                if (compat && compat.config) {\n                    config = compat.config;\n                } else {\n                    meta = image.dockerImageMetadata || { };\n                    if (meta.Config)\n                        config = meta.Config;\n                }\n                weak.set(image, config);\n            }\n            return config || { };\n        };\n    }\n])\n\n.factory('imageLayers', [\n    'WeakMap',\n    'imageDockerManifest',\n    function(WeakMap, imageDockerManifest) {\n        var weak = new WeakMap();\n        return function imageLayers(image) {\n            if (!image)\n                return [];\n            var manifest, layers = weak.get(image);\n            if (!layers) {\n                manifest = imageDockerManifest(image);\n                if (manifest.history)\n                    layers = manifest.history;\n                else if (image.dockerImageLayers)\n                    layers = image.dockerImageLayers;\n                else\n                    layers = [];\n                weak.set(image, layers);\n            }\n            return layers;\n        };\n    }\n])\n\n.factory('imagestreamTags', [\n    'WeakMap',\n    function(WeakMap) {\n        var weak = new WeakMap();\n        return function imagestreamTags(imagestream) {\n            if (!imagestream)\n                return [ ];\n            var name, build, tags = weak.get(imagestream);\n            if (!tags) {\n                build = { };\n                angular.forEach(imagestream.spec.tags, function(tag) {\n                    build[tag.name] = build[tag.name] || { name: tag.name, imagestream: imagestream };\n                    build[tag.name].spec = angular.copy(tag);\n                });\n                angular.forEach(imagestream.status.tags, function(tag) {\n                    build[tag.tag] = build[tag.tag] || { name: tag.tag, imagestream: imagestream };\n                    build[tag.tag].status = angular.copy(tag);\n                });\n                tags = [ ];\n                for (name in build)\n                    tags.push(build[name]);\n                weak.set(imagestream, tags);\n            }\n            return tags;\n        };\n    }\n])\n\n.factory('imagestreamTagFromName', [\n    function() {\n        return function imagestreamFromName(imagestream, from) {\n            var parts, result = [ ];\n            if (from && from.kind === \"ImageStreamImage\")\n                result.delimiter = \"@\";\n            else if (from && from.kind === \"ImageStreamTag\")\n                result.delimiter = \":\";\n            if (result.delimiter) {\n                parts = from.name.split(result.delimiter);\n                if (parts.length === 1) {\n                    result.push(imagestream.spec.name, parts[0]);\n                } else {\n                    result.push(parts.shift());\n                    result.push(parts.join(result.delimiter));\n                }\n                result.qualified = result.join(result.delimiter);\n            }\n            return result;\n        };\n    }\n])\n\n.directive('registryImageBody', [\n    'imageLayers',\n    'imageDockerConfig',\n    function(imageLayers, imageDockerConfig) {\n        return {\n            restrict: 'E',\n            scope: {\n                image: '=',\n                names: '=',\n            },\n            templateUrl: 'registry-image-widgets/views/image-body.html',\n            link: function(scope, element, attrs) {\n                scope.$watch(\"image\", function(image) {\n                    scope.layers = imageLayers(image);\n                    scope.config = imageDockerConfig(image);\n                    scope.labels = scope.config.Labels;\n                    if (angular.equals({ }, scope.labels))\n                        scope.labels = null;\n                });\n            }\n        };\n    }\n])\n\n.directive('registryImagePull', [\n    function() {\n        return {\n            restrict: 'E',\n            scope: {\n                settings: '=',\n                names: '=',\n            },\n            templateUrl: 'registry-image-widgets/views/image-pull.html'\n        };\n    }\n])\n\n.directive('registryImageConfig', [\n    'imageDockerConfig',\n    function(imageDockerConfig) {\n        return {\n            restrict: 'E',\n            scope: {\n                image: '=',\n            },\n            templateUrl: 'registry-image-widgets/views/image-config.html',\n            link: function(scope, element, attrs) {\n                scope.configCommand = function configCommand(config) {\n                    var result = [ ];\n                    if (!config)\n                        return \"\";\n                    if (config.Entrypoint)\n                        result.push.apply(result, config.Entrypoint);\n                    if (config.Cmd)\n                        result.push.apply(result, config.Cmd);\n                    var string = result.join(\" \");\n                    if (config.User && config.User.split(\":\")[0] != \"root\")\n                        return \"$ \" + string;\n                    else\n                        return \"# \" + string;\n                };\n\n                scope.$watch(\"image\", function(image) {\n                    scope.config = imageDockerConfig(image);\n                });\n            }\n        };\n    }\n])\n\n.directive('registryImageMeta', [\n    'imageDockerConfig',\n    function(imageDockerConfig) {\n        return {\n            restrict: 'E',\n            scope: {\n                image: '=',\n            },\n            templateUrl: 'registry-image-widgets/views/image-meta.html',\n            link: function(scope, element, attrs) {\n                scope.$watch(\"image\", function(image) {\n                    scope.config = imageDockerConfig(image);\n                    scope.labels = scope.config.Labels;\n                    if (angular.equals({ }, scope.labels))\n                        scope.labels = null;\n                });\n            }\n        };\n    }\n])\n\n.directive('registryImagestreamBody', [\n    function() {\n        return {\n            restrict: 'E',\n            scope: {\n                imagestream: '=',\n                imagestreamFunc: '&imagestreamModify',\n                projectFunc: '&projectModify',\n                sharingFunc: '&projectSharing',\n            },\n            templateUrl: 'registry-image-widgets/views/imagestream-body.html',\n            link: function(scope, element, attrs) {\n                scope.projectModify = scope.projectFunc();\n                scope.projectSharing = scope.sharingFunc();\n                scope.imagestreamModify = scope.imagestreamFunc();\n            }\n        };\n    }\n])\n\n.directive('registryImagestreamPush', [\n    function(imageDockerConfig) {\n        return {\n            restrict: 'E',\n            scope: {\n                imagestream: '=',\n                settings: '=',\n            },\n            templateUrl: 'registry-image-widgets/views/imagestream-push.html',\n        };\n    }\n])\n\n.directive('registryAnnotations', [\n    function() {\n        return {\n            restrict: 'E',\n            scope: {\n                annotations: '=',\n            },\n            templateUrl: 'registry-image-widgets/views/annotations.html',\n        };\n    }\n])\n\n.directive('registryImagestreamMeta', [\n    function(imageDockerConfig) {\n        return {\n            restrict: 'E',\n            scope: {\n                imagestream: '=',\n            },\n            templateUrl: 'registry-image-widgets/views/imagestream-meta.html',\n        };\n    }\n])\n\n.factory('registryImageListingFunc', [\n    'imagestreamTags',\n    'imagestreamTagFromName',\n    '$location',\n    function(imagestreamTags, imagestreamTagFromName, $location) {\n        return function(scope, element, attrs) {\n            scope.imagestreamTags = imagestreamTags;\n            scope.imagestreamPath = scope.imagestreamFunc();\n            scope.imageByTag = scope.imageByTagFunc();\n            scope.imageTagNames = scope.imageTagNamesFunc();\n            scope.sharedImages = scope.sharedImagesFunc();\n            scope.imagestreamTagFromName = imagestreamTagFromName;\n\n            /* Called when someone clicks on a row */\n            scope.imagestreamActivate = function imagestreamActivate(imagestream, tag, ev) {\n                var event;\n                if (scope.imagestreamExpanded(imagestream, tag)) {\n                    scope.imagestreamToggle(imagestream, tag, ev);\n                } else {\n                    event = scope.$emit(\"activate\", imagestream, tag, ev);\n                    if (!event.defaultPrevented && scope.imagestreamPath)\n                        $location.path(scope.imagestreamPath(imagestream, tag));\n                }\n                ev.preventDefault();\n                ev.stopPropagation();\n            };\n\n            /* A list of all the expanded rows */\n            var expanded = { };\n\n            function identifier(imagestream, tag) {\n                var id = imagestream.metadata.namespace + \"/\" + imagestream.metadata.name;\n                if (tag)\n                    id += \"/\" + tag.name;\n                return id;\n            }\n\n            /* Called to check the state of an expanded row */\n            scope.imagestreamExpanded = function imagestreamExpanded(imagestream, tag) {\n                return identifier(imagestream, tag) in expanded;\n            };\n\n            /* Called when someone toggles a row */\n            scope.imagestreamToggle = function imagestreamToggle(imagestream, tag, ev) {\n                var id = identifier(imagestream, tag);\n                if (id in expanded)\n                    delete expanded[id];\n                else\n                    expanded[id] = true;\n                ev.stopPropagation();\n            };\n        };\n    }\n])\n\n.directive('registryImagestreamListing', [\n    'registryImageListingFunc',\n    function(imageListingFunc) {\n        return {\n            restrict: 'E',\n            scope: {\n                imagestreams: '=',\n                imagestreamFunc: '&imagestreamPath',\n                settings: '=',\n                actions: '=',\n                imageByTagFunc: '&imageByTag',\n                imageTagNamesFunc: '&imageTagNames',\n                sharedImagesFunc: '&sharedImages'\n            },\n            templateUrl: 'registry-image-widgets/views/imagestream-listing.html',\n            link: imageListingFunc\n        };\n    }\n])\n\n.directive('registryImageListing', [\n    'registryImageListingFunc',\n    function(imageListingFunc) {\n        return {\n            restrict: 'E',\n            scope: {\n                imagestream: '=',\n                imagestreamFunc: '&imagestreamPath',\n                settings: '=',\n                actions: '=',\n                imageByTagFunc: '&imageByTag',\n                imageTagNamesFunc: '&imageTagNames',\n                sharedImagesFunc: '&sharedImages'\n            },\n            templateUrl: 'registry-image-widgets/views/image-listing.html',\n            link: imageListingFunc\n        };\n    }\n])\n\n.directive('registryImagePanel', [\n    'imageDockerConfig',\n    'imageLayers',\n    function(imageDockerConfig, imageLayers) {\n        return {\n            restrict: 'E',\n            transclude: true,\n            scope: true,\n            templateUrl: 'registry-image-widgets/views/image-panel.html',\n            link: function(scope, element, attrs) {\n                var tab = 'main';\n                scope.tab = function(name, ev) {\n                    if (ev) {\n                        tab = name;\n                        ev.stopPropagation();\n                    }\n                    return tab === name;\n                };\n\n                scope.$watch(function() {\n                    scope.image = scope.imageByTag(scope.tag);\n                });\n\n                scope.$watch(\"image\", function(image) {\n                    if (scope.image) {\n                        scope.layers = imageLayers(scope.image);\n                        scope.config = imageDockerConfig(scope.image);\n                        scope.labels = scope.config.Labels;\n                        if (scope.imageTagNames)\n                            scope.names = scope.imageTagNames(scope.image);\n                    }\n                });\n            }\n        };\n    }\n])\n\n.directive('registryImagestreamPanel', [\n    function() {\n        return {\n            restrict: 'E',\n            transclude: true,\n            scope: true,\n            templateUrl: 'registry-image-widgets/views/imagestream-panel.html',\n            link: function(scope, element, attrs) {\n                var tab = 'main';\n                scope.tab = function(name, ev) {\n                    if (ev) {\n                        tab = name;\n                        ev.stopPropagation();\n                    }\n                    return tab === name;\n                };\n            }\n        };\n    }\n]);\n\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./images.js\n// module id = 4\n// module chunks = 0","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n/* globals cockpit */\n\n(function() {\n    \"use strict\";\n\n    function v1CompatibilityLabel(layer, lower) {\n        var cmd, last;\n        if (layer.v1Compatibility.container_config) {\n            cmd = layer.v1Compatibility.container_config.Cmd;\n            if (cmd) {\n                last = cmd[cmd.length - 1];\n                if (last.indexOf(\"#(nop)\") === 0)\n                    return last.substring(6).trim();\n                else if (cmd.length == 1 && cmd[0].indexOf(\"/bin/sh -c #(nop)\") === 0)\n                    return cmd[0].substring(17).trim();\n                else\n                    return cmd.join(\" \");\n            }\n        }\n\n        return layer.v1Compatibility.id;\n    }\n\n    angular.module('registryUI.images')\n\n    .factory('prepareLayer', [\n        'gettextCatalog',\n        function(gettextCatalog) {\n            return function prepareLayer(layer, index, layers) {\n                var result;\n                /* DockerImageManifest */\n                if (layer.v1Compatibility) {\n                    result = {\n                        id: layer.v1Compatibility.id,\n                        size: layer.v1Compatibility.Size || 0,\n                        label: v1CompatibilityLabel(layer, layers[index + 1])\n                    };\n\n                /* DockerImageLayers */\n                } else if (layer.name && layer.size) {\n                    result = {\n                        id: layer.name,\n                        size: layer.size || 0,\n                        label: layer.name,\n                    };\n\n                /* Unsupported layer type */\n                } else {\n                    result = {\n                        size: 0,\n                        id: index,\n                        label: gettextCatalog.getString(\"Unknown layer\"),\n                    };\n                }\n\n                /* Some hints for coloring the display */\n                if (result.label.indexOf(\"RUN \") === 0)\n                    result.hint = \"run\";\n                else if (result.label.indexOf(\"ADD \") === 0 || result.size > 8192)\n                    result.hint = \"add\";\n                else\n                    result.hint = \"other\";\n\n                return result;\n            };\n        }\n    ])\n\n    .directive('registryImageLayers', [\n        'imageLayers',\n        'prepareLayer',\n        'gettextCatalog',\n        function(imageLayers, prepareLayer, gettextCatalog) {\n            return {\n                restrict: 'E',\n                scope: {\n                    image: '=',\n                    data: '=?layers',\n                },\n                templateUrl: 'registry-image-widgets/views/image-layers.html',\n                link: function($scope, element, attributes) {\n                    $scope.formatSize = function(bytes) {\n                        var n;\n                        if (!bytes) {\n                            return \"\";\n                        } else if (bytes > 1024 && typeof cockpit != \"undefined\") {\n                            return cockpit.format_bytes(bytes);\n                        } else if (bytes > 1024 * 1024) {\n                            n = (bytes / (1024 * 1024)).toFixed(1);\n                            return gettextCatalog.getPlural(n, $scope, \"{0} MB\", \"{0} MB\").replace(\"{0}\", n);\n                        } else {\n                            return gettextCatalog.getPlural(n, $scope, \"{0} byte\", \"{0} bytes\").replace(\"{0}\", bytes);\n                        }\n                    };\n\n                    $scope.$watch('data', function(layers) {\n                        if (layers && layers.length)\n                            layers = layers.map(prepareLayer).reverse();\n                        $scope.layers = layers;\n                    });\n\n                    $scope.$watch('image', function(image) {\n                        /* Only digest layers if image is set, or null */\n                        if (!angular.isUndefined(image))\n                            $scope.data = imageLayers(image);\n                    });\n                }\n            };\n        }\n    ]);\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./layers.js\n// module id = 5\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<dt ng-if=\\\"annotations\\\" translate>Annotations</dt>\\n<dd ng-repeat=\\\"(name, value) in annotations\\\">{{name}}: {{value}}</dd>\\n\";\nvar id1=\"registry-image-widgets/views/annotations.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/annotations.html\n// module id = 6\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<dl class=\\\"dl-horizontal left\\\">\\n<dt ng-if=\\\"labels.name\\\" translate>Name</dt>\\n<dd ng-if=\\\"labels.name\\\">{{ labels.name }}</dd>\\n<dt ng-if=\\\"labels.summary\\\" translate>Summary</dt>\\n<dd ng-if=\\\"labels.summary\\\">{{ labels.summary }}</dd>\\n<dt ng-if=\\\"labels.description\\\" translate>Description</dt>\\n<dd ng-if=\\\"labels.description\\\">{{ labels.description }}</dd>\\n<dt ng-if=\\\"labels.url\\\" translate>Source URL</dt>\\n<dd ng-if=\\\"labels.url\\\">\\n<a href=\\\"labels.url\\\"><i class=\\\"fa fa-external-link\\\"></i> {{ labels.url }}</a>\\n</dd>\\n<dt translate>Author</dt>\\n<dd ng-if=\\\"config.author\\\">{{config.author}}</dd>\\n<dd ng-if=\\\"!config.author && image.dockerImageMetadata.Author\\\">{{image.dockerImageMetadata.Author}}</dd>\\n<dd ng-if=\\\"!config.author && !image.dockerImageMetadata.Author\\\"><em translate>Unknown</em></dd>\\n<dt ng-if=\\\"labels['build-date'] || layers[0].v1Compatibility.created || image.dockerImageMetadata.Created\\\" translate>Built</dt>\\n<dd ng-if=\\\"labels['build-date']\\\" title=\\\"{{labels['build-date']}}\\\">{{ labels['build-date'] | dateRelative}}</dd>\\n<dd ng-if=\\\"!labels['build-date'] && layers[0].v1Compatibility.created\\\" title=\\\"{{layers[0].v1Compatibility.created}}\\\">{{ layers[0].v1Compatibility.created | dateRelative}}</dd>\\n<dd ng-if=\\\"!labels['build-date'] && !layers[0].v1Compatibility.created && image.dockerImageMetadata.Created\\\" title=\\\"{{image.dockerImageMetadata.Created}}\\\">{{image.dockerImageMetadata.Created | dateRelative}}</dd>\\n<dt translate>Digest</dt>\\n<dd class=\\\"indentifier\\\"><tt>{{ image.metadata.name }}</tt></dd>\\n<dt ng-if-start=\\\"config.Image\\\" translate>Identifier</dt>\\n<dd class=\\\"indentifier\\\" ng-if-end><tt>{{ config.Image }}</tt></dd>\\n</dl>\\n<dl class=\\\"registry-image-tags\\\" ng-if=\\\"names\\\">\\n<dt translate>Tags</dt>\\n<dd><span class=\\\"registry-image-tag\\\" ng-repeat=\\\"name in names\\\">{{name}}</span>&nbsp;</dd>\\n</dl>\\n\";\nvar id1=\"registry-image-widgets/views/image-body.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/image-body.html\n// module id = 7\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<dl class=\\\"dl-horizontal\\\">\\n<dt translate>Command</dt>\\n<dd><code>{{ configCommand(config) }}</code></dd>\\n</dl>\\n<div class=\\\"row\\\">\\n<dl class=\\\"col-xs-12 col-sm-12 col-md-4 dl-horizontal\\\">\\n<dt translate>Run as</dt>\\n<dd ng-if=\\\"config.User\\\">{{config.User}}</dd>\\n<dd ng-if=\\\"!config.User\\\"><em translate>Default</em></dd>\\n<dt translate>Directory</dt>\\n<dd ng-if=\\\"config.WorkingDir\\\">{{config.WorkingDir}}</dd>\\n<dd ng-if=\\\"!config.WorkingDir\\\">/</dd>\\n<dt ng-if=\\\"config.StopSignal\\\" translate>Stop with</dt>\\n<dd ng-if=\\\"config.StopSignal\\\">{{config.StopSignal}}</dd>\\n<dt translate>Architecture</dt>\\n<dd ng-if=\\\"config.architecture\\\">{{config.architecture}}</dd>\\n<dd ng-if=\\\"!config.architecture\\\">{{image.dockerImageMetadata.Architecture}}</dd>\\n</dl>\\n<dl class=\\\"col-xs-12 col-sm-12 col-md-8 dl-horizontal full-width\\\">\\n<dt ng-if=\\\"config.Env.length\\\" translate>Environment</dt>\\n<dd ng-repeat=\\\"env in config.Env\\\"><tt>{{env}}</tt></dd>\\n</dl>\\n</div>\\n<div class=\\\"row\\\">\\n<dl class=\\\"col-xs-12 col-sm-12 col-md-4 dl-horizontal\\\">\\n<dt translate>Ports</dt>\\n<dd ng-repeat=\\\"(port, data) in config.ExposedPorts\\\">{{port}}</dd>\\n<dd ng-if=\\\"!config.ExposedPorts\\\"><em translate>None</em></dd>\\n</dl>\\n<dl class=\\\"col-xs-12 col-sm-12 col-md-8 dl-horizontal full-width\\\">\\n<dt ng-if=\\\"config.Volumes\\\" translate>Volumes</dt>\\n<dd ng-repeat=\\\"(volume, data) in config.Volumes\\\">{{volume}}</dd>\\n</dl>\\n</div>\\n\";\nvar id1=\"registry-image-widgets/views/image-config.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/image-config.html\n// module id = 8\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<ul class=\\\"registry-image-layers\\\">\\n<li ng-repeat=\\\"layer in layers\\\" class=\\\"hint-{{ layer.hint }}\\\">\\n<span title=\\\"{{ layer.size }}\\\">{{ formatSize(layer.size) }}</span>\\n<p>{{ layer.label}}</p>\\n</li>\\n</ul>\\n\";\nvar id1=\"registry-image-widgets/views/image-layers.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/image-layers.html\n// module id = 9\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<table class=\\\"listing-ct\\\">\\n<thead>\\n<tr>\\n<th class=\\\"listing-ct-toggle\\\"></th>\\n<th translate=\\\"yes\\\" width=\\\"20%\\\">Tag</th>\\n<th translate=\\\"yes\\\">From</th>\\n<th translate=\\\"yes\\\">Identifier</th>\\n<th translate=\\\"yes\\\">Last Updated</th>\\n</tr>\\n</thead>\\n<tbody ng-repeat=\\\"tag in imagestreamTags(imagestream) | orderBy : 'tag.name'\\\" ng-if=\\\"imagestream\\\" data-id=\\\"{{ imagestream.metadata.namespace + '/' + imagestream.metadata.name + ':' + tag.name }}\\\" ng-class=\\\"{open: imagestreamExpanded(imagestream, tag), last: $last, first: $first}\\\">\\n<tr ng-click=\\\"imagestreamActivate(imagestream, tag, $event)\\\" class=\\\"listing-ct-item registry-listing\\\">\\n<td ng-click=\\\"imagestreamToggle(imagestream, tag, $event)\\\" class=\\\"listing-ct-toggle\\\">\\n<i class=\\\"fa fa-fw\\\"></i>\\n</td>\\n<th>\\n<a class=\\\"registry-image-tag\\\" ng-href=\\\"{{ imagestreamPath(imagestream, tag) }}\\\" title=\\\"{{tag.name }}\\\">{{ tag.name }}</a>\\n</th>\\n<td ng-init=\\\"name = imagestreamTagFromName(imagestream, tag.spec.from)\\\">\\n<div ng-if=\\\"!name || !tag.spec.from\\\"><em>pushed image</em></div>\\n<div ng-if=\\\"name\\\" title=\\\"{{tag.spec.from.name}}\\\">\\n<span ng-if=\\\"!name[0]\\\">{{tag.spec.from.name}}</span>\\n<span ng-if=\\\"name[0]\\\">\\n<span ng-if=\\\"name[0] === imagestream.metadata.name\\\">{{name.qualified}}</span>\\n<span ng-if=\\\"name[0] !== imagestream.metadata.name\\\">\\n<a ng-click=\\\"imagestreamActivate({ metadata: { namespace: tag.spec.from.namespace, name: name[0] }}, name[1], $event)\\\">{{tag.spec.from.name}}</a>\\n</span>\\n</span>\\n</div>\\n</td>\\n<td class=\\\"image-identifier\\\">\\n<div class=\\\"row\\\" ng-init=\\\"annotations = imagestream.metadata.annotations\\\">\\n<div class=\\\"col col-xs-12\\\" ng-if=\\\"!tag.status\\\">\\n<div ng-if=\\\"annotations['openshift.io/image.dockerRepositoryCheck']\\\">\\n<span class=\\\"pficon pficon-warning-triangle-o\\\" style=\\\"margin-right: 5px\\\" ng-attr-title=\\\"{{annotations['openshift.io/image.dockerRepositoryCheck']}}\\\"></span>\\n<span translate=\\\"yes\\\">Unable to resolve</span>\\n</div>\\n<div ng-if=\\\"!annotations['openshift.io/image.dockerRepositoryCheck']\\\">\\n<span ng-if=\\\"!tag.spec.from\\\" translate=\\\"yes\\\">Not yet synced</span>\\n<span ng-if=\\\"tag.spec.from\\\" translate=\\\"yes\\\">Unresolved</span>\\n</div>\\n</div>\\n<div class=\\\"col col-xs-12\\\" ng-if=\\\"tag.status\\\">\\n<span ng-if=\\\"tag.status.items.length &amp;&amp; tag.status.items[0].image\\\">\\n<tt title=\\\"{{tag.status.items[0].image}}\\\">{{tag.status.items[0].image}}</tt>\\n</span>\\n<span ng-if=\\\"!tag.status.items.length\\\"><em translate=\\\"yes\\\">none</em></span>\\n</div>\\n</div>\\n</td>\\n<td>\\n<div title=\\\"{{ tag.items[0].created }}\\\">\\n<span ng-if=\\\"tag.status.items.length &amp;&amp; tag.status.items[0].image\\\" title=\\\"{{ tag.items[0].created }}\\\">\\n{{ tag.status.items[0].created | dateRelative }}\\n</span>\\n</div>\\n</td>\\n</tr>\\n<tr class=\\\"listing-ct-panel\\\" ng-if=\\\"imagestreamExpanded(imagestream, tag)\\\" ng-repeat-end=\\\"\\\">\\n<td colspan=\\\"5\\\">\\n<registry-image-panel ng-init=\\\"tag = tag.status\\\"></registry-image-panel>\\n</td>\\n</tr>\\n</tbody>\\n<thead class=\\\"listing-ct-empty\\\" ng-if=\\\"!quiet\\\">\\n<tr>\\n<td colspan=\\\"5\\\" ng-if=\\\"!failure && !imagestreamTags(imagestream)\\\" translate=\\\"yes\\\">No tags are present.</td>\\n<td colspan=\\\"5\\\" ng-if=\\\"failure\\\">{{failure}}</td>\\n</tr>\\n</thead>\\n</table>\\n\";\nvar id1=\"registry-image-widgets/views/image-listing.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/image-listing.html\n// module id = 10\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<div>\\n<dl class=\\\"dl-horizontal left\\\">\\n<dt ng-if=\\\"labels\\\" translate>Labels</dt>\\n<dd ng-repeat=\\\"(name, value) in labels\\\" ng-show=\\\"name != 'description' && name != 'name'\\\">\\n<tt>{{name}}={{value}}</tt>\\n</dd>\\n<dt ng-if=\\\"config.OnBuild.length\\\" translate>On Build</dt>\\n<dd ng-repeat=\\\"line in config.OnBuild\\\"><tt>{{line}}</tt></dd>\\n<registry-annotations annotations=\\\"image.metadata.annotations\\\"></registry-annotations>\\n<dt translate>Docker Version</dt>\\n<dd>{{image.dockerImageMetadata.DockerVersion}}</dd>\\n</dl>\\n</div>\\n\";\nvar id1=\"registry-image-widgets/views/image-meta.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/image-meta.html\n// module id = 11\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<div>\\n<div class=\\\"listing-ct-head\\\">\\n<div ng-if=\\\"actions.deleteTag\\\" class=\\\"listing-ct-actions\\\">\\n<button class=\\\"btn btn-danger btn-delete pficon pficon-delete\\\" ng-click=\\\"actions.deleteTag(imagestream, tag)\\\"></button>\\n</div>\\n<ul class=\\\"nav nav-tabs nav-tabs-pf\\\">\\n<li ng-class=\\\"{active: tab('main')}\\\">\\n<a ng-click=\\\"tab('main', $event)\\\" translate>Image</a>\\n</li>\\n<li ng-class=\\\"{active: tab('config')}\\\">\\n<a ng-click=\\\"tab('config', $event)\\\" translate>Container</a>\\n</li>\\n<li ng-class=\\\"{active: tab('meta')}\\\">\\n<a ng-click=\\\"tab('meta', $event)\\\" translate>Metadata</a>\\n</li>\\n</ul>\\n</div>\\n<div class=\\\"listing-ct-body\\\" ng-show=\\\"tab('main')\\\">\\n<registry-image-body image=\\\"image\\\" names=\\\"names\\\">\\n</registry-image-body>\\n<registry-image-pull settings=\\\"settings\\\" names=\\\"names\\\">\\n</registry-image-pull>\\n</div>\\n<div class=\\\"listing-ct-body\\\" ng-show=\\\"tab('config')\\\">\\n<registry-image-config image=\\\"image\\\">\\n</registry-image-config>\\n</div>\\n<div class=\\\"listing-ct-body\\\" ng-if=\\\"tab('meta')\\\">\\n<registry-image-meta image=\\\"image\\\">\\n</registry-image-meta>\\n<registry-image-layers image=\\\"image\\\" layers=\\\"layers\\\">\\n</registry-image-layers>\\n</div>\\n</div>\\n\";\nvar id1=\"registry-image-widgets/views/image-panel.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/image-panel.html\n// module id = 12\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<div ng-if=\\\"names\\\" class=\\\"registry-image-pull\\\">\\n<p>\\n<i class=\\\"fa fa-info-circle\\\"></i>\\n<span translate>To pull this image:</span>\\n</p>\\n<code ng-if=\\\"!settings.registry.host\\\">$ sudo docker pull <span class=\\\"placeholder\\\">registry</span>/{{names[0]}}</code>\\n<code ng-if=\\\"settings.registry.host\\\">$ sudo docker pull <span>{{settings.registry.host}}</span>/{{names[0]}}</code>\\n</div>\\n\";\nvar id1=\"registry-image-widgets/views/image-pull.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/image-pull.html\n// module id = 13\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<div ng-repeat=\\\"statustags in imagestream.status.tags\\\">\\n<div ng-repeat=\\\"condition in statustags.conditions\\\" ng-if=\\\"condition.type == 'ImportSuccess' && condition.status == 'False'\\\" class=\\\"alert alert-danger\\\">\\n<span class=\\\"pficon pficon-error-circle-o\\\"></span>\\n<span translate>{{ condition.message }}. Timestamp: {{ condition.lastTransitionTime }} Error count: {{ condition.generation }}</span>\\n<a translate ng-if=\\\"imagestreamModify\\\" ng-click=\\\"imagestreamModify(imagestream)\\\" class=\\\"alert-link\\\">Edit image stream</a>\\n</div>\\n</div>\\n<dl class=\\\"dl-horizontal left\\\">\\n<dt translate ng-if=\\\"projectSharing\\\">Access Policy</dt>\\n<dd ng-if=\\\"projectSharing\\\" ng-switch=\\\"projectSharing(imagestream.metadata.namespace)\\\">\\n<div ng-switch-when=\\\"anonymous\\\">\\n<a translate ng-if=\\\"projectModify\\\" ng-click=\\\"projectModify(imagestream.metadata.namespace)\\\">Images may be pulled by anonymous users</a>\\n<span translate ng-if=\\\"!projectModify\\\">Images may be pulled by anonymous users</span>\\n<i title=\\\"Images accessible to anonymous users\\\" class=\\\"fa fa-unlock registry-imagestream-lock\\\"></i>\\n</div>\\n<div ng-switch-when=\\\"shared\\\">\\n<a translate ng-if=\\\"projectModify\\\" ng-click=\\\"projectModify(imagestream.metadata.namespace)\\\">Images may be pulled by any authenticated user or group</a>\\n<span translate ng-if=\\\"!projectModify\\\">Images may be pulled by any authenticated user or group</span>\\n<i title=\\\"Images accessible to authenticated users\\\" class=\\\"fa fa-lock registry-imagestream-lock\\\"></i>\\n</div>\\n<div ng-switch-when=\\\"private\\\">\\n<a translate ng-if=\\\"projectModify\\\" ng-click=\\\"projectModify(imagestream.metadata.namespace)\\\">Images may only be pulled by specific users or groups</a>\\n<span translate ng-if=\\\"!projectModify\\\">Images may only be pulled by specific users or groups</span>\\n<i title=\\\"Images only accessible to members\\\" class=\\\"fa fa-lock registry-imagestream-lock\\\"></i>\\n</div>\\n<div ng-switch-default>\\n<a translate ng-if=\\\"projectModify\\\" ng-click=\\\"projectModify(imagestream.metadata.namespace)\\\">Unknown</a>\\n<span translate ng-if=\\\"!projectModify\\\">Unknown</span>\\n<i title=\\\"Unknown or invalid image access policy\\\" class=\\\"fa fa-lock registry-imagestream-lock\\\"></i>\\n</div>\\n</dd>\\n<dt translate ng-if-start=\\\"imagestream.spec.dockerImageRepository\\\">Follows docker repo</dt>\\n<dd ng-if-end><tt>{{imagestream.spec.dockerImageRepository}}</tt></dd>\\n<dt>Pulling repository</dt>\\n<dd><tt>{{imagestream.status.dockerImageRepository}}</tt></dd>\\n<dt ng-if-start=\\\"imagestream.status.publicDockerImageRepository\\\">Public pulling repo</dt>\\n<dd ng-if-end><tt>{{imagestream.status.publicDockerImageRepository}}</tt></dd>\\n<dt translate>Image count</dt>\\n<dd ng-if=\\\"imagestream.status.tags.length\\\">{{imagestream.status.tags.length}}</dd>\\n<dd ng-if=\\\"!imagestream.status.tags.length\\\">0</dd>\\n</dl>\\n\";\nvar id1=\"registry-image-widgets/views/imagestream-body.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/imagestream-body.html\n// module id = 14\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<table class=\\\"listing-ct\\\">\\n<thead>\\n<tr>\\n<th class=\\\"listing-ct-toggle\\\"></th>\\n<th translate=\\\"yes\\\" width=\\\"20%\\\">Name</th>\\n<th translate=\\\"yes\\\">Tags</th>\\n<th translate=\\\"yes\\\">Repository</th>\\n</tr>\\n</thead>\\n<tbody ng-repeat=\\\"(link, imagestream) in imagestreams track by link | orderBy : 'link'\\\" ng-if=\\\"imagestreams\\\" data-id=\\\"{{ imagestream.metadata.namespace + '/' + imagestream.metadata.name }}\\\" class=\\\"active\\\" ng-class=\\\"{open: imagestreamExpanded(imagestream)}\\\">\\n<tr ng-click=\\\"imagestreamActivate(imagestream, null, $event)\\\" class=\\\"listing-ct-item imagestream-item\\\">\\n<td ng-click=\\\"imagestreamToggle(imagestream, null, $event)\\\" class=\\\"listing-ct-toggle\\\">\\n<i class=\\\"fa fa-fw\\\"></i>\\n</td>\\n<th>\\n{{ imagestream.metadata.namespace + '/' + imagestream.metadata.name }}\\n<div ng-repeat=\\\"statustags in imagestream.status.tags\\\">\\n<span ng-repeat=\\\"condition in statustags.conditions\\\" ng-if=\\\"condition.type == 'ImportSuccess' &amp;&amp; condition.status == 'False'\\\" class=\\\"pficon pficon-warning-triangle-o\\\"></span>\\n</div>\\n</th>\\n<td ng-init=\\\"tag_count = imagestreamTags(imagestream).length\\\">\\n<a ng-repeat=\\\"tag in imagestreamTags(imagestream) | orderBy : 'tag.name' | limitTo: 4\\\" class=\\\"registry-image-tag\\\" ng-click=\\\"imagestreamActivate(imagestream, tag, $event)\\\" title=\\\"{{tag.name }}\\\">{{ tag.name }}</a>\\n<span ng-if=\\\"tag_count > 4\\\" translate-n=\\\"tag_count - 4\\\" translate translate-plural=\\\"and {{ $count }} others\\\">and {{ $count }} other</span>\\n</td>\\n<td>\\n<span ng-if=\\\"!imageStream.status.dockerImageRepository && !imageStream.spec.dockerImageRepository\\\"><em translate>unknown</em></span>\\n<span ng-if=\\\"imageStream.status.dockerImageRepository || imageStream.spec.dockerImageRepository\\\">{{imageStream.status.dockerImageRepository || imageStream.spec.dockerImageRepository}}</span>\\n</td>\\n</tr>\\n<tr class=\\\"listing-ct-panel\\\" ng-if=\\\"imagestreamExpanded(imagestream)\\\">\\n<td colspan=\\\"4\\\">\\n<registry-imagestream-panel></registry-imagestream-panel>\\n</td>\\n</tr>\\n</tbody>\\n<thead class=\\\"listing-ct-empty\\\" ng-if=\\\"!quiet\\\">\\n<tr>\\n<td colspan=\\\"4\\\" ng-if=\\\"!failure && !imagestreams\\\" translate=\\\"yes\\\">No image streams are present.</td>\\n<td colspan=\\\"4\\\" ng-if=\\\"failure\\\">{{failure}}</td>\\n</tr>\\n</thead>\\n</table>\\n\";\nvar id1=\"registry-image-widgets/views/imagestream-listing.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/imagestream-listing.html\n// module id = 15\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<dl class=\\\"dl-horizontal left\\\">\\n<registry-annotations annotations=\\\"imagestream.metadata.annotations\\\"></registry-annotations>\\n</dl>\\n\";\nvar id1=\"registry-image-widgets/views/imagestream-meta.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/imagestream-meta.html\n// module id = 16\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<div>\\n<div class=\\\"listing-ct-head\\\">\\n<div ng-if=\\\"actions\\\" class=\\\"listing-ct-actions\\\">\\n<button class=\\\"btn btn-danger btn-delete pficon pficon-delete\\\" ng-if=\\\"actions.deleteImageStream\\\" ng-click=\\\"actions.deleteImageStream(imagestream)\\\"></button>\\n<button class=\\\"btn btn-default pficon pficon-edit\\\" ng-if=\\\"actions.modifyImageStream\\\" ng-click=\\\"actions.modifyImageStream(imagestream)\\\"></button>\\n</div>\\n<ul class=\\\"nav nav-tabs nav-tabs-pf\\\">\\n<li ng-class=\\\"{active: tab('main')}\\\"><a ng-click=\\\"tab('main', $event)\\\" translate>Image stream</a></li>\\n<li ng-class=\\\"{active: tab('meta')}\\\" ng-if=\\\"imagestream.metadata.annotations\\\">\\n<a ng-click=\\\"tab('meta', $event)\\\" translate>Metadata</a></li>\\n<li ng-class=\\\"{active: tab('tags')}\\\">\\n<a ng-click=\\\"tab('tags', $event)\\\" translate>Tags</a></li>\\n</ul>\\n</div>\\n<div class=\\\"listing-ct-body\\\" ng-show=\\\"tab('main')\\\">\\n<registry-imagestream-body imagestream=\\\"imagestream\\\" imagestream-modify=\\\"actions.modifyImageStream\\\" project-modify=\\\"actions.modifyProject\\\" project-sharing=\\\"sharedImages\\\">\\n</registry-imagestream-body>\\n<registry-imagestream-push imagestream=\\\"imagestream\\\" settings=\\\"settings\\\">\\n</registry-imagestream-push>\\n</div>\\n<div class=\\\"listing-ct-body\\\" ng-if=\\\"tab('meta')\\\" ng-if=\\\"imagestream.metadata.annotations\\\">\\n<registry-imagestream-meta imagestream=\\\"imagestream\\\">\\n</registry-imagestream-meta>\\n</div>\\n<div class=\\\"listing-ct-body\\\" ng-if=\\\"tab('tags')\\\">\\n<div class=\\\"inline-tabs\\\">\\n<registry-image-listing imagestream=\\\"imagestream\\\" image-by-tag=\\\"imageByTag\\\" settings=\\\"settings\\\" shared-images=\\\"sharedImages\\\" actions=\\\"actions\\\" image-tag-names=\\\"imageTagNames\\\">\\n</registry-image-listing>\\n</div>\\n</div>\\n</div>\\n\";\nvar id1=\"registry-image-widgets/views/imagestream-panel.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/imagestream-panel.html\n// module id = 17\n// module chunks = 0","var angular=window.angular,ngModule;\ntry {ngModule=angular.module([\"ng\"])}\ncatch(e){ngModule=angular.module(\"ng\",[])}\nvar v1=\"<div class=\\\"registry-imagestream-push\\\">\\n<p>\\n<i class=\\\"fa fa-info-circle\\\"></i>\\n<span translate>To push an image to this image stream:</span>\\n</p>\\n<code ng-if=\\\"settings.registry.host\\\">$ sudo docker tag <em>myimage</em> <span>{{settings.registry.host}}</span>/{{ imagestream.metadata.namespace }}/{{ imagestream.metadata.name}}:<em>tag</em>\\n$ sudo docker push <span>{{settings.registry.host}}</span>/{{ imagestream.metadata.namespace }}/{{ imagestream.metadata.name}}</code>\\n<code ng-if=\\\"!settings.registry.host\\\">$ sudo docker tag <em>myimage</em> <span class=\\\"placeholder\\\">registry</span>/{{ imagestream.metadata.namespace }}/{{ imagestream.metadata.name}}:<em>tag</em>\\n$ sudo docker push <span class=\\\"placeholder\\\">registry</span>/{{ imagestream.metadata.namespace }}/{{ imagestream.metadata.name}}</code>\\n</div>\\n\";\nvar id1=\"registry-image-widgets/views/imagestream-push.html\";\nvar inj=angular.element(window.document).injector();\nif(inj){inj.get(\"$templateCache\").put(id1,v1);}\nelse{ngModule.run([\"$templateCache\",function(c){c.put(id1,v1)}]);}\nmodule.exports=v1;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/imagestream-push.html\n// module id = 18\n// module chunks = 0"],"sourceRoot":""}